@model LibraryAppMVC.ViewModels.ListBookViewModel

@{
    ViewData["Title"] = "List of books";
}
<style>
    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

    th, td {
        padding: 8px 12px;
        border: 1px solid #ddd;
    }

    th {
        background-color: #f4f4f4;
        text-align: left;
    }

    tbody tr:nth-child(even) {
        background-color: #f9f9f9;
    }

    tbody tr:hover {
        background-color: #f1f1f1;
    }

    .error {
        color: red;
        margin-bottom: 20px;
    }
</style>

<h2>Book List</h2>

<!-- Error Message Display -->
@if (TempData["ErrorMessage"] != null)
{
    <div style="color: red; margin-bottom: 20px;">
        @TempData["ErrorMessage"]
    </div>
}

@if (TempData["RemoveMessage"] != null)
{

    <div style="color: red;">
        @TempData["RemoveMessage"]
    </div>
}

<h2>List of books</h2>

@if (Model?.bookListViewMode != null && Model.bookListViewMode.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Title</th>
                <th>Author</th>
                <th>Genre</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in Model.bookListViewMode)
            {
                <tr>
                    <td>@book.Title</td>
                    <td>@book.Author</td>
                    <td>@book.Genre</td>
                    <td>
                        <a asp-action="Delete" asp-route-id="@book.Title" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-info">
        No books found in your library.
    </div>
}
