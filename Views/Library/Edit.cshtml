@using Microsoft.AspNetCore.Mvc.TagHelpers
@model LibraryAppMVC.ViewModels.BookViewModel
@{
    ViewData["Title"] = "Edit Book";
    Layout = "_UserLayout";
}

<div class="container-fluid">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">@ViewData["Title"]</h1>
        <a href="@Url.Action("BookDetails", "Library", new { id = Model.Id })"
           class="d-none d-sm-inline-block btn btn-sm btn-secondary shadow-sm">
            <i class="bi bi-arrow-left"></i> Back to Details
        </a>
    </div>

    <!-- Alerts -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Form Card -->
    <div class="card shadow mb-4">
        <div class="card-header py-3 bg-primary text-white">
            <h6 class="m-0 font-weight-bold">Editing: @Model.Title</h6>
        </div>
        <div class="card-body">
            <form asp-action="Edit" method="post" class="needs-validation" novalidate>
                <input type="hidden" asp-for="Id" />

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="Title" class="form-label">Title *</label>
                            <input asp-for="Title" class="form-control" required />
                            <span asp-validation-for="Title" class="text-danger small"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="Author" class="form-label">Author *</label>
                            <input asp-for="Author" class="form-control" required />
                            <span asp-validation-for="Author" class="text-danger small"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-4">
                            <label asp-for="Genre" class="form-label">Genre *</label>
                            <select asp-for="Genre" class="form-select"
                                    asp-items="Html.GetEnumSelectList<Book.GenreType>()" required>
                                <option value="">-- Select Genre --</option>
                            </select>
                            <span asp-validation-for="Genre" class="text-danger small"></span>
                        </div>
                    </div>
                    <!-- Additional fields column can be added here -->
                </div>

                <div class="form-group mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save"></i> Save Changes
                    </button>
                    <a href="@Url.Action("BookDetails", "Library", new { id = Model.Id })"
                       class="btn btn-outline-secondary ms-2">
                        <i class="bi bi-x-circle"></i> Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Enhanced client-side validation
        (function () {
            'use strict'

            // Fetch all forms we want to apply validation to
            var forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}

@section Styles {
    <style>
        .form-label {
            font-weight: 600;
        }

        .card {
            border-radius: 10px;
        }

        .card-header.bg-primary {
            border-radius: 10px 10px 0 0 !important;
        }

        .form-control:focus, .form-select:focus {
            border-color: #86b7fe;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }
    </style>
}